#pragma once
#include "table/STR_table.hpp"
#include <vector>
namespace pairhmm {

enum PairHMMAlgorithm { NAIVE, NW, SUZUKI_KASAHARA, FIXED_POINT};

inline std::vector<std::vector<double>> standard_gop_vector = {
    {49.50, 49.50, 49.50, 49.50, 49.50, 49.50, 45.50, 43.50, 38.50, 35.50,
     34.50, 33.50, 33.50, 33.50, 33.50, 33.50, 32.50, 32.50, 32.50, 31.50},
    {43.25, 43.25, 43.25, 42.25, 38.25, 37.25, 34.25, 33.25, 31.25, 31.25,
     30.25, 30.25, 30.25, 29.50, 29.50, 29.50, 27.50, 27.50, 27.50, 27.50},
    {40.75, 40.75, 40.75, 40.75, 37.75, 37.75, 35.75, 34.75, 33.75, 30.75,
     30.75, 30.75, 30.75, 30.75, 28.75, 28.75, 28.75, 21.00, 21.00, 21.00},
    {39.00, 39.00, 38.00, 38.00, 35.00, 34.00, 33.00, 30.00, 30.00, 30.00,
     30.00, 30.00, 25.00, 25.00, 25.00, 24.00, 24.00, 24.00, 21.25, 21.25},
    {37.75, 37.75, 37.75, 35.75, 35.75, 32.75, 32.75, 30.75, 28.75, 28.75,
     26.75, 26.75, 24.75, 24.75, 20.25, 20.25, 20.25, 20.25, 20.25, 20.25},
    {36.75, 36.75, 35.75, 35.75, 31.75, 28.75, 28.75, 28.75, 28.75, 24.00,
     23.00, 23.00, 23.00, 23.00, 23.00, 23.00, 23.00, 23.00, 23.00, 23.00},
    {36.00, 36.00, 33.00, 33.00, 33.00, 33.00, 33.00, 33.00, 33.00, 33.00,
     33.00, 33.00, 33.00, 33.00, 33.00, 33.00, 33.00, 33.00, 33.00, 33.00},
    {35.25, 35.25, 31.25, 27.50, 27.50, 27.50, 27.50, 27.50, 27.50, 27.50,
     27.50, 27.50, 27.50, 27.50, 27.50, 27.50, 27.50, 27.50, 27.50, 27.50}};

inline table::STRTable<double>
transform_into_STRTable(std::vector<std::vector<double>> input_table) {
  auto ret = table::STRTable<double>();
  ret.set_table(input_table);
  return ret;
};

inline table::STRTable<double> standard_gop =
    transform_into_STRTable(standard_gop_vector);

inline std::vector<std::vector<double>> standard_gcp_vector = {
    {10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00,
     10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00},
    {5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00,
     5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00, 5.00},
    {3.33, 3.33, 3.33, 3.33, 3.33, 3.33, 3.33, 3.33, 3.33, 3.33,
     3.33, 3.33, 3.33, 3.33, 3.33, 3.33, 3.33, 3.33, 3.33, 3.33},
    {2.50, 2.50, 2.50, 2.50, 2.50, 2.50, 2.50, 2.50, 2.50, 2.50,
     2.50, 2.50, 2.50, 2.50, 2.50, 2.50, 2.50, 2.50, 2.50, 2.50},
    {2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00,
     2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00},
    {1.67, 1.67, 1.67, 1.67, 1.67, 1.67, 1.67, 1.67, 1.67, 1.67,
     1.67, 1.67, 1.67, 1.67, 1.67, 1.67, 1.67, 1.67, 1.67, 1.67},
    {1.43, 1.43, 1.43, 1.43, 1.43, 1.43, 1.43, 1.43, 1.43, 1.43,
     1.43, 1.43, 1.43, 1.43, 1.43, 1.43, 1.43, 1.43, 1.43, 1.43},
    {1.25, 1.25, 1.25, 1.25, 1.25, 1.25, 1.25, 1.25, 1.25, 1.25,
     1.25, 1.25, 1.25, 1.25, 1.25, 1.25, 1.25, 1.25, 1.25, 1.25}};

inline table::STRTable<double> standard_gcp =
    transform_into_STRTable(standard_gcp_vector);

inline std::vector<std::vector<double>> base_match_prob = {
    {2, 13, 13, 13}, {13, 2, 13, 13}, {13, 13, 2, 13}, {13, 13, 13, 2}};

inline double mismatch_prob = 0;

inline size_t FLOAT_START_INDEX = 32;
} // namespace pairhmm